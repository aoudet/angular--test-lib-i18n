{"version":3,"file":"i18n-test.mjs","sources":["../../../projects/i18n-test/src/lib/i18n-test.service.ts","../../../projects/i18n-test/src/lib/i18n-test.component.ts","../../../projects/i18n-test/src/lib/weather/enums/weather-enum.ts","../../../projects/i18n-test/src/lib/weather/weather.component.ts","../../../projects/i18n-test/src/lib/weather/weather.component.html","../../../projects/i18n-test/src/lib/i18n-test.module.ts","../../../projects/i18n-test/src/i18n-test.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nTestService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-i18n-test',\n  template: `\n    <h3>{{test}}</h3>\n    <p>i18n-test works!</p>\n    <span i18n=\"@@5206857922697139278\">5206857922697139278</span>\n  `,\n  styles: [],\n})\nexport class I18nTestComponent implements OnInit {\n  test: string = '';\n  constructor() {\n    // this.test = $localize`@@5206857922697139278:test007`;\n  }\n\n  ngOnInit(): void {}\n}\n","export enum WeatherEnum {\n  none = 0,\n  sun = 1,\n  cloud = 2,\n  rain = 4,\n  snow = 8,\n  variable = 16,\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { WeatherEnum } from './enums/weather-enum';\n\nexport interface IWeather {\n  temperature: number | undefined;\n  type: WeatherEnum[];\n}\n\n@Component({\n  selector: 'lib-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n})\nexport class WeatherComponent implements OnInit {\n  @Input() multiple: boolean = false;\n  @Input() weather: IWeather = {\n    temperature: undefined,\n    type: [WeatherEnum.none],\n  };\n  @Output() changed = new EventEmitter<IWeather>();\n\n  temp: FormControl;\n  weatherEnum = WeatherEnum;\n\n  constructor() {\n    this.temp = new FormControl<number | undefined>(undefined);\n  }\n\n  ngOnInit(): void {\n    this.temp.setValue(this.weather.temperature);\n    this.temp.valueChanges.pipe(debounceTime(50)).subscribe((data) => {\n      this.weather.temperature = data || undefined;\n      this.changed.emit(this.weather);\n    });\n  }\n\n  onWeatherChange(event: MatButtonToggleChange) {\n    console.log('onWeatherChange', event.value);\n    this.weather.type = event.value;\n    this.changed.emit(this.weather);\n  }\n}\n","<p>weather works!</p>\n<div class=\"row\">\n  <mat-form-field class=\"temperatureLabel\">\n    <mat-label i18n=\"@@Resx.WeatherExtension.Temperature\"\n      >Resx.WeatherExtension.Temperature</mat-label\n    >\n    <input matInput type=\"number\" [formControl]=\"temp\" />\n    <span matSuffix i18n=\"@@Resx.WeatherExtension.Celcius\"\n      >Resx.WeatherExtension.Celcius</span\n    >\n  </mat-form-field>\n\n  <div>\n    <mat-button-toggle-group\n      #group=\"matButtonToggleGroup\"\n      [value]=\"weather.type\"\n      [multiple]=\"multiple\"\n      (change)=\"onWeatherChange($event)\"\n    >\n      <mat-button-toggle [value]=\"weatherEnum.sun\">\n        <img src=\"./assets/extensions/Sun.png\" alt=\"sun\" title=\"sun\" />\n      </mat-button-toggle>\n      <mat-button-toggle [value]=\"weatherEnum.cloud\">\n        <img src=\"./assets/extensions/Cloud.png\" alt=\"cloud\" title=\"cloud\" />\n      </mat-button-toggle>\n      <mat-button-toggle [value]=\"weatherEnum.rain\">\n        <img src=\"./assets/extensions/Rain.png\" alt=\"rain\" title=\"rain\" />\n      </mat-button-toggle>\n      <mat-button-toggle [value]=\"weatherEnum.snow\">\n        <img src=\"./assets/extensions/Snow.png\" alt=\"snow\" title=\"snow\" />\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n</div>\n<p>temperature : {{ weather.temperature }}</p>\n<p>type of : {{ weatherEnum[weather.type[0]] }}</p>\n<p>type of : {{ weatherEnum[weather.type[1]] }}</p>\n<p>type of : {{ weatherEnum[weather.type[2]] }}</p>\n<p>type of : {{ weatherEnum[weather.type[3]] }}</p>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { I18nTestComponent } from './i18n-test.component';\nimport { WeatherComponent } from './weather/weather.component';\n\n@NgModule({\n  declarations: [I18nTestComponent, WeatherComponent],\n  imports: [\n    MatCommonModule,\n    MatButtonToggleModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  exports: [I18nTestComponent, WeatherComponent],\n})\nexport class I18nTestModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}